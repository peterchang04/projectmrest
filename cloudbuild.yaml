steps:
# pull the latest from repo branch: development
- name: 'gcr.io/cloud-builders/git'
  args: ['clone', 'https://github.com/peterchang04/projectmrest.git']
- name: 'gcr.io/cloud-builders/git'
  args: ['fetch']
- name: 'gcr.io/cloud-builders/git'
  args: ['checkout', 'development']
# yarn globals
- name: 'gcr.io/cloud-builders/yarn'
  args: ['global', 'add', 'nodemon']
# install package.json
- name: 'gcr.io/cloud-builders/yarn'
  args: ['install']
# run tests
- name: 'gcr.io/cloud-builders/yarn'
  args: ['test']
# build docker image locally -- substitutions stored at cloud build trigger
- name: 'gcr.io/cloud-builders/docker'
  args: ['build',
    '-t', 'gcr.io/projectmrest/development:$REVISION_ID',
    '-f', 'Dockerfile_cloudbuild',
    '--build-arg', 'env=${_ENV}',
    '--build-arg', 'twilioAccountSid=${_TWILIO_ACCOUNT_SID}',
    '--build-arg', 'twilioAuthToken=${_TWILIO_AUTH_TOKEN}',
    '--build-arg', 'mongoEndpoint=${_MONGO_ENDPOINT}',
    '--build-arg', 'mongoDatabase=${_MONGO_DATABASE}',
    '--build-arg', 'mongoUsername=${_MONGO_USERNAME}',
    '--build-arg', 'mongoPassword=${_MONGO_PASSWORD}',
    '--build-arg', 'socketioRedisEndpoint=${_SOCKETIO_REDIS_ENDPOINT}',
    '--build-arg', 'socketioRedisPort=${_SOCKETIO_REDIS_PORT}',
    '--build-arg', 'socketioRedisPassword=${_SOCKETIO_REDIS_PASSWORD}',
    '--build-arg', 'revision_id=$REVISION_ID',
    '.'
  ]
# push ready-to-deploy image to container registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/projectmrest/development:$REVISION_ID']
# create a new instance template, to update instance groups to.
- name: 'gcr.io/cloud-builders/gcloud'
  args: [
    'beta', 'compute', 'instance-templates',
    'create-with-container', 'prjmr-itmp-dev-$REVISION_ID',
    '--container-image', 'gcr.io/projectmrest/development:$REVISION_ID',
    '--boot-disk-device-name', 'prjmr-itmp-dev-boot-$REVISION_ID',
    '--boot-disk-size', '10GB',
    '--boot-disk-type', 'pd-standard',
    '--machine-type', 'f1-micro',
    '--maintenance-policy', 'MIGRATE',
    '--region', 'us-west1',
    '--tags', 'http-server,https-server'
  ]
  # update cloud instance group with latest image
  - name: 'gcr.io/cloud-builders/gcloud'
    args: [
      'beta', 'compute', 'instance-groups', 'managed', 'rolling-action',
      'start-update', 'projectmrest-instancegroup-dev',
      '--version', 'template=prjmr-itmp-dev-$REVISION_ID',
      '--max-surge', '1',
      '--max-unavailable', '1',
      '--zone', 'us-west1-b'
    ]
  # build Dockerfile_local, for local development -- substitutions stored at cloud build trigger
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build',
      '-t', 'gcr.io/projectmrest/local',
      '.'
    ]
  # push local development image to container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/projectmrest/local']
